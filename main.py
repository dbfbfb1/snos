import datetime
import pprint
import smtplib
import sqlite3
import time
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

import telebot
from cryptopay import CryptoPay
from cryptopay import TESTNET
from cryptopay.types import Invoice
from telebot import types

bot = telebot.TeleBot('7584236727:AAGReJFPSrAGsbnlztiW2-HcGiz6YDyRwy0')
senders = {
    "bloody.snos@mail.ru": "B1iJdb8cLu45nKivsWRM"

}
help_text = f'''
    <strong>–ù–∞—à –±–æ—Ç–Ω–µ—Ç ‚Äî –Ω–∞–¥—ë–∂–Ω–æ–µ –∏ –±—ã—Å—Ç—Ä–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.

–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º–æ—â–Ω–æ—Å—Ç—å –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–∞–∂–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤.

–ù–∞—à–∏ –Ω–∏–∑–∫–∏–µ —Ü–µ–Ω—ã –¥–µ–ª–∞—é—Ç –Ω–∞—Å –∏–¥–µ–∞–ª—å–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –±—é–¥–∂–µ—Ç–æ–º.

–ë—ã—Å—Ç—Ä–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏! –ù–∞—á–Ω–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –±–æ—Ç–Ω–µ—Ç–∞ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.

–ù–∞—à–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
 - –£–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
 - –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–Ω–æ—Å–∞.
 - –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è –º–æ—â–Ω–æ—Å—Ç—å –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á.</strong>
 
 –í–µ—Ä—Å–∏—è –±–æ—Ç–∞ - 1.0
 –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—á—Ç - 65
    '''
confirm_text_day = '''
–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π! üéâ

–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–µ–≥–æ —Å–Ω–æ—Å–µ—Ä–∞. –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! –í–æ—Ç —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:
- –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:  –°–Ω–æ—Å–µ—Ä –Ω–∞ 1 –¥–µ–Ω—å
- –°—Ç–æ–∏–º–æ—Å—Ç—å:  2$

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤—ã –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @sociaIov & @extradota

–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
'''

confirm_text_week = '''
–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π! üéâ

–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–µ–≥–æ —Å–Ω–æ—Å–µ—Ä–∞. –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! –í–æ—Ç —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:
- –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:  –°–Ω–æ—Å–µ—Ä –Ω–∞ 1 –Ω–µ–¥–µ–ª—é
- –°—Ç–æ–∏–º–æ—Å—Ç—å:  5$

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤—ã –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @sociaIov & @extradota

–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
'''

confirm_text_month = '''
–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π! üéâ

–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–µ–≥–æ —Å–Ω–æ—Å–µ—Ä–∞. –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! –í–æ—Ç —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:
- –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:  –°–Ω–æ—Å–µ—Ä –Ω–∞ 1 –º–µ—Å—è—Ü
- –°—Ç–æ–∏–º–æ—Å—Ç—å:  10$

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤—ã –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @sociaIov & @extradota

–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
'''

confirm_text_forever = '''
–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π! üéâ

–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à–µ–≥–æ —Å–Ω–æ—Å–µ—Ä–∞. –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å! –í–æ—Ç —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:
- –¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω:  –°–Ω–æ—Å–µ—Ä –Ω–∞–≤—Å–µ–≥–¥–∞
- –°—Ç–æ–∏–º–æ—Å—Ç—å:  30$

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! –ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤—ã –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏.

–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ @sociaIov & @extradota

–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start
'''
global username
global id
global register_time
global bool_subscribe
global balance
global quantity
db_file = "data__base.db"

receivers = ['sms@telegram.org',
             'dmca@telegram.org',
             'abuse@telegram.org',
             'sticker@telegram.org',
             'support@telegram.org',
             'snossocial@gmail.com'
             ]

API_KEY = "20003:AADJSeXxRnrO4MYZ6VLpvSkx7HXQy4R8VCk"
BOT_TOKEN = "7702354813:AAHx7Tn5eQrV0j-EOKlHx1CBQSMTOgvKlg0"

crypto_pay = cp = CryptoPay(API_KEY, TESTNET)
print("–ø—Ä–∏–≤–µ—Ç")
def create_table(db_file):
    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    cur.execute('''
    CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        username TEXT UNIQUE,
        user_id INTEGER UNIQUE,
        register_data TEXT
    )
    ''')

    cur.execute("PRAGMA table_info(users)")
    columns = [column[1] for column in cur.fetchall()]

    conn.commit()
    cur.close()
    conn.close()

    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    if 'subscribe_bool_day' not in columns:
        cur.execute('''
            ALTER TABLE users
            ADD COLUMN subscribe_bool_day INTEGER DEFAULT 0
        ''')
    else:
        print("–°—Ç–æ–ª–±–µ—Ü subscribe_bool_day —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    if 'subscribe_bool_week' not in columns:
        cur.execute('''
               ALTER TABLE users
               ADD COLUMN subscribe_bool_week INTEGER DEFAULT 0
           ''')
    else:
        print("–°—Ç–æ–ª–±–µ—Ü subscribe_bool_week —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    if 'subscribe_bool_month' not in columns:
        cur.execute('''
               ALTER TABLE users
               ADD COLUMN subscribe_bool_month INTEGER DEFAULT 0
           ''')
    else:
        print("–°—Ç–æ–ª–±–µ—Ü subscribe_bool_month —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    if 'subscribe_bool_forever' not in columns:
        cur.execute('''
               ALTER TABLE users
               ADD COLUMN subscribe_bool_forever INTEGER DEFAULT 0
           ''')
    else:
        print("–°—Ç–æ–ª–±–µ—Ü subscribe_bool_forever —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    if 'balance' not in columns:
        cur.execute('''
               ALTER TABLE users
               ADD COLUMN balance INTEGER DEFAULT 0
           ''')
    else:
        print("–°—Ç–æ–ª–±–µ—Ü balance —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    conn.commit()
    cur.close()
    conn.close()


def check_and_add_user(db_file, username, id, register_time):
    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ username –∏–ª–∏ user_id
    cur.execute("SELECT * FROM users WHERE username = ? OR user_id = ?", (username, id))
    user = cur.fetchone()

    if user is not None:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º '{username}' –∏–ª–∏ id '{id}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        try:
            cur.execute("INSERT INTO users (username, user_id, register_data) VALUES (?, ?, ?)", (username, id, register_time))
            conn.commit()
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
        except sqlite3.IntegrityError:
            print(f"–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º id '{id}' –∏–ª–∏ –∏–º–µ–Ω–µ–º '{username}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    cur.close()
    conn.close()




def get_invoice(invoice):
    get_invoice = invoice.paid_at
def create_invoice(amount: float, message) -> str:
    try:
        global invoice
        invoice = crypto_pay.create_invoice(asset='USDT', allow_anonymous=False, amount=amount, currency_type="crypto")
        pprint.pprint(invoice)
        username = message.from_user.username
        invoice.await_payment(user_id=message.from_user.id, message_id=message.message_id, username=username)
        return invoice.pay_url

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞: {e}")
        return None

    conn.close()

def start_payment_process(chat_id, message):
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—á–µ—Ç–∞")
    bot.register_next_step_handler_by_chat_id(chat_id, set_amount)


def set_amount(message):
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id-1)
    try:
        amount = float(message.text)
        invoice_url = create_invoice(amount, message)
        if invoice_url:
            bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption=f"–ù–æ–≤—ã–π –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π –Ω–∏–∂–µ\n\n{invoice_url}\n{invoice_url}\n{invoice_url}",
            parse_mode = 'html')
            print(get_invoice(invoice))
        else:
            bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—á–µ—Ç.")
    except ValueError:
        bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'),
                       caption="–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞",
                       parse_mode='html')


@bot.message_handler(commands=['start'])
def command_start(message):
    id = message.from_user.id
    bot.delete_message(message.chat.id, message.message_id)
    username = message.from_user.username
    register_time = str(datetime.datetime.now().time())
    create_table(db_file)
    check_and_add_user(db_file, username, id, register_time)

    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    select_query = "SELECT subscribe_bool FROM users WHERE user_id = ?"
    cur.execute(select_query, (id,))
    result = cur.fetchone()

    if result:
        current_subscribe_bool = result[0]
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.close()
    markup = types.InlineKeyboardMarkup()
    main_button3 = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ', callback_data="callback_main_button3")
    main_button1 = types.InlineKeyboardButton('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data="callback_main_button1")
    if current_subscribe_bool == 0:
        main_button2 = types.InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∫–∞', callback_data="subscribe_button")
        markup.row(main_button2)
        markup.row(main_button1, main_button3)
    elif current_subscribe_bool == 1:
        button_snos = types.InlineKeyboardButton('–°–Ω–æ—Å', callback_data="snos_button")
        markup.row(button_snos)
        markup.row(main_button1, main_button3)

    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="üíª –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

@cp.polling_handler()
def handle_payment(
        invoice: Invoice,
        user_id: int,
        message_id: int,
        username: str # –¥–æ–±–∞–≤–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä username
) -> None:
    global balance
    balance = invoice.amount
    markup = types.InlineKeyboardMarkup()
    information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back_pay')
    markup.row(information_button_back)
    bot.send_photo(user_id, photo=open('photo.jpg', 'rb'),
                   caption=f"–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á–µ—Ç –Ω–∞ —Å—É–º–º—É: {invoice.amount} {invoice.asset}\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–ø–ª–∞—Ç—É!",
                   reply_markup=markup)
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
    plus_user_balance(user_id, balance)
    return user_id# –ø–µ—Ä–µ–¥–∞–µ–º username
def plus_user_balance(user_id: int, amount: float) -> None:
    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    select_query = "SELECT balance FROM users WHERE user_id = ?"
    cur.execute(select_query, (user_id,))
    result = cur.fetchone()

    if result:
        current_balance = result[0]
        print(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_balance}")

        # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
        new_balance = (current_balance or 0) + amount

        update_query = "UPDATE users SET balance = ? WHERE user_id = ?"
        cur.execute(update_query, (new_balance, user_id))
        print(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_balance}.")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.close()


def send_email(receiver, sender_email, sender_password, subject, body):
    try:
        msg = MIMEMultipart()
        msg['From'] = sender_email
        msg['To'] = receiver
        msg['Subject'] = subject
        msg.attach(MIMEText(body, 'plain'))

        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ SMTP-—Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø–æ—Ä—Ç–∞
        if 'gmail.com' in sender_email:
            smtp_server = 'smtp.gmail.com'
            smtp_port = 587
        elif 'rambler.ru' in sender_email:
            smtp_server = 'smtp.rambler.ru'
            smtp_port = 587
        elif 'hotmail.com' in sender_email or 'outlook.com' in sender_email:
            smtp_server = 'smtp-mail.outlook.com'
            smtp_port = 587
        elif 'mail.ru' in sender_email:
            smtp_server = 'smtp.mail.ru'
            smtp_port = 587
        elif 'yandex.ru' in sender_email:
            smtp_server = 'smtp.yandex.ru'
            smtp_port = 587
        elif 'zoho.com' in sender_email:
            smtp_server = 'smtp.zoho.com'
            smtp_port = 587
        else:
            raise ValueError("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –ø–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å")

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞
        server = smtplib.SMTP(smtp_server, smtp_port)
        server.starttls()
        server.login(sender_email, sender_password)
        server.sendmail(sender_email, receiver, msg.as_string())
        server.quit()

        return True
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞: {e}")
        return False

@bot.message_handler(func=lambda message: True)

def send_welcome(message: types.Message, data):
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º —á–µ–ª–æ–≤–µ–∫–∞")
    bot.register_next_step_handler(message, get_username, data)
def get_username(message: types.Message, data):
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)

    username = message.text
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ —á–µ–ª–æ–≤–µ–∫–∞")

    bot.register_next_step_handler(message, get_id, username, data)

def get_id(message: types.Message, username, data):
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)
    print(data)
    if data == "session" or data == "virtual":
        id = message.text
        markup = types.InlineKeyboardMarkup()
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
        markup.row(information_button_back)
        bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ê—Ç–∞–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!", reply_markup=markup)
        sent_emails = 0
        comp_texts = {
            "session": f"3–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –Ø —Å–ª—É—á–∞–π–Ω–æ –ø–µ—Ä–µ—à—ë–ª –ø–æ —Å—Å—ã–ª–∫–µ, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ñ–∏—à–∏–Ω–≥–æ–≤–æ–π, –∏ –ø–æ—Ç–µ—Ä—è–ª –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É. –ú–æ–π —é–∑–µ—Ä–Ω–µ–π–º - {username}, ID - {id}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–æ–≥–∏—Ç–µ –º–Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.",

            "virtual": f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram! –Ø –æ–±—Ä–∞—Ç–∏–ª –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å –ø–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤. –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –≤–ª–∞–¥–µ–ª—å—Ü—É –∞–∫–∫–∞—É–Ω—Ç–∞. –ü—Ä–æ—à—É –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é. –ó–∞—Ä–∞–Ω–µ–µ —Å–ø–∞—Å–∏–±–æ!"
        }
        for i in range(10):
            for sender_email, sender_password in senders.items():
                for receiver in receivers:
                    comp_text = comp_texts[data]
                    comp_body = comp_text.format(username=username.strip(), id=id.strip())
                    send_email(receiver, sender_email, sender_password, '–ñ–∞–ª–æ–±–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º', comp_body)
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {receiver} –æ—Ç {sender_email}!")
                    sent_emails += 1
                    time.sleep(3)
            print(sent_emails)
    else:
        id = message.text
        bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —á–∞—Ç")
        bot.register_next_step_handler(message, get_chat_link, id, username, data)
def get_chat_link(message: types.Message, username, id, data):
    chat_link = message.text
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ")
    bot.register_next_step_handler(message, get_violation_link, chat_link, id, username, data)
def get_violation_link(message: types.Message, username, chat_link, id, data):
    violation_link = message.text
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)
    sent_emails = 0
    markup = types.InlineKeyboardMarkup()
    information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
    markup.row(information_button_back)
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ê—Ç–∞–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!", reply_markup=markup)
    comp_texts = {
        "nark": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –∑–∞–º–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ø—Ä–æ–¥–∞–∂–µ–π –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.",

        "curator": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –û–±—Ä–∞—Ç–∏–ª –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π, –∫–∞–∂–µ—Ç—Å—è, –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –ª—é–¥–µ–π –≤ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–ª–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∑–∞ –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É.",

        "CPU": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –≤–∏–∂—É, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id} –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ–≤–ª–µ—á–µ–Ω –≤ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —É—á–∞—Å—Ç–∏–µ–º –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.",

        "extortion": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –í —á–∞—Ç–∞—Ö —è –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π, –ø–æ—Ö–æ–∂–µ, –≤—ã–º–æ–≥–∞–µ—Ç –ª–∏—á–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ù–∞–¥–µ—é—Å—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.",

        "oppression_nation": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –∑–∞–º–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Ä–∞–∑–∂–∏–≥–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ —É–≥–Ω–µ—Ç–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é.",

        "oppression_religion": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id} –º–æ–∂–µ—Ç —Ä–∞–∑–∂–∏–≥–∞—Ç—å –Ω–∞–ø—Ä—è–∂–µ–Ω–Ω–æ—Å—Ç—å –≤ —Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ë—É–¥—É –±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω –∑–∞ –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É.",

        "dismemberment": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π, –ø–æ—Ö–æ–∂–µ, —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –∂–µ—Å—Ç–æ–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é.",

        "flaying": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –û–±—Ä–∞—Ç–∏–ª –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å —à–æ–∫–∏—Ä—É—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É.",

        "pornography": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –∑–∞–º–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ.",

        "pimp": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –∑–∞–º–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å –∏–∑—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–π —Å–ª—É—á–∞–π.",

        "suicide": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –æ–ø–∞—Å–µ–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É —Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é.",

        "terrorist": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –Ω–∞—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ù–∞–¥–µ—é—Å—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.",

        "swat": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –∑–∞–º–µ—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π, –≤–æ–∑–º–æ–∂–Ω–æ, —É–≥—Ä–æ–∂–∞–µ—Ç —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ–º –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é.",

        "kill": f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Telegram. –Ø –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º {username} –∏ ID {id}, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —É–≥—Ä–æ–∂–∞—Ç—å –Ω–∞—Å–∏–ª–∏–µ–º. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç: {chat_link}, –∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_link}. –ü—Ä–æ—à—É –≤–∞—Å –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é."
    }
    for i in range(10):

        for sender_email, sender_password in senders.items():
            for receiver in receivers:
                comp_text = comp_texts[data]
                comp_body = comp_text.format(username=username.strip(), id=id.strip(), chat_link=chat_link.strip(),
                                             violation_link=violation_link.strip())
                send_email(receiver, sender_email, sender_password, '–ñ–∞–ª–æ–±–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º', comp_body)
                print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {receiver} –æ—Ç {sender_email}!")
                sent_emails += 1
                time.sleep(3)
    print(sent_emails)

user_data = {}

# –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
comp_texts = {
    "channel_dox": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–≤–∏–Ω–Ω—ã—Ö –ª—é–¥–µ–π. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª - {channel_link}, —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è - {channel_violation}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_flaying": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –∂–µ—Å—Ç–æ–∫–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª - {channel_link}, —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è - {channel_violation}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_CPU": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—é —Å —É—á–∞—Å—Ç–∏–µ–º –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª - {channel_link}, —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è - {channel_violation}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_price": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. —Ö–æ—á—É –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω–∞ –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–¥–∞–µ—Ç —É—Å–ª—É–≥–∏ –¥–æ–∫—Å–∏–Ω–≥–∞, —Å–≤–∞—Ç—Ç–∏–Ω–≥–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_dismemberment": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¢–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç —à–æ–∫–∏—Ä—É—é—â–∏–µ –∫–∞–¥—Ä—ã —É–±–∏–π—Å—Ç–≤–∞ –ª—é–¥–µ–π. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_casino": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç —Ä—É–ª–µ—Ç–∫–∏ –∏–ª–∏ –∂–µ –∫–∞–∑–∏–Ω–æ, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 171 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_narko": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–∞–∂—É –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏—Ö –≤–µ—â–µ—Å—Ç–≤, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 228.1 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_terror": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –ª—é–¥–µ–π –∫ —Ç–µ—Ä—Ä–æ—Ä—É, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 205.2 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_suicide": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –ª—é–¥–µ–π –∫ —Å—É–∏—Ü–∏–¥—É, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 110.1 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_hatred": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–∂–∏–≥–∞–µ—Ç –Ω–µ–Ω–∞–≤–∏—Å—Ç—å –≤ —Å—Ç–æ—Ä–æ–Ω—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π –∏–ª–∏ –∂–µ –≥—Ä—É–ø–ø –ª–∏—Ü. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_violence": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É–µ—Ç –Ω–∞—Å–∏–ª–∏–µ, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 282 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_sell_CPU": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä–æ–¥–∞–∂–µ–π –¥–µ—Ç—Å–∫–∏—Ö –∏–Ω—Ç–∏–º–Ω—ã—Ö —Ñ–æ—Ç–æ, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 242.1 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_oppression_nation": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É–µ—Ç —É–≥–Ω–µ—Ç–µ–Ω–∏–µ –Ω–∞—Ü–∏–∏, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 282 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_oppression_religion": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É–µ—Ç —É–≥–Ω–µ—Ç–µ–Ω–∏–µ —Ä–µ–ª–∏–≥–∏–∏, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ —Å—Ç–∞—Ç—å–µ–π 148 –£–ö–†–§. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {channel_link} –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {channel_violation} –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.",
    "channel_pornography": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞. –ù–∞ –≤–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ —è –Ω–∞—à–µ–ª –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Ä—É–µ—Ç –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã. –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª - {channel_link}, –°—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ - {channel_violation}. –ü—Ä–æ—Å—å–±–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª."
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
def get_channel_link(message: types.Message, data):
    user_id = message.from_user.id
    user_data[user_id] = {'channel_link': None, 'channel_violation': None}

    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª")
    bot.register_next_step_handler(message, get_violation, user_id, data)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ
def get_violation(message: types.Message, user_id, data):
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)

    user_data[user_id]['channel_link'] = message.text

    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ")
    bot.register_next_step_handler(message, get_good, user_id, data)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã
def get_good(message: types.Message, user_id, data):
    bot.delete_message(message.chat.id, message.message_id)
    bot.delete_message(message.chat.id, message.message_id - 1)

    user_data[user_id]['channel_violation'] = message.text

    channel_link = user_data[user_id]['channel_link']
    channel_violation = user_data[user_id]['channel_violation']

    markup = types.InlineKeyboardMarkup()
    information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
    markup.row(information_button_back)

    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="–û—Ç–ª–∏—á–Ω–æ, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–±—Ä–∞–Ω—ã. –ê—Ç–∞–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!", reply_markup=markup)

    comp_text = comp_texts.get(data, "–ñ–∞–ª–æ–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    comp_body = comp_text.format(channel_link=channel_link.strip(), channel_violation=channel_violation.strip())

    sent_emails = 0
    for i in range(10):
        for sender_email, sender_password in senders.items():
            for receiver in receivers:
                send_email(receiver, sender_email, sender_password, '–ñ–∞–ª–æ–±–∞ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª', comp_body)
                print(f"–û–¢–ü–†–ê–í–õ–ï–ù–û –ù–ê {receiver} –û–¢ {sender_email}")
                sent_emails += 1
                time.sleep(5)
        print(sent_emails)
def minus_user_balance(user_id: int, amount: float) -> None:
    conn = sqlite3.connect(db_file)
    cur = conn.cursor()

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    select_query = "SELECT balance FROM users WHERE user_id = ?"
    cur.execute(select_query, (user_id,))
    result = cur.fetchone()

    if result:
        current_balance = result[0]
        print(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_balance}")

        # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
        new_balance = (current_balance or 0) - amount

        update_query = "UPDATE users SET balance = ? WHERE user_id = ?"
        cur.execute(update_query, (new_balance, user_id))
        print(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_balance}.")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn.close()


@bot.message_handler(commands=['help'])
def command_help(message):
    bot.delete_message(message.chat.id, message.message_id)
    markup = types.InlineKeyboardMarkup()
    information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
    markup.row(information_button_back)
    bot.send_photo(message.chat.id, photo=open('photo.jpg', 'rb'), caption="<strong>–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º\n\n\n@extradota</strong>", parse_mode='html', reply_markup=markup)


def get_user_balance(user_id: int) -> float:
    """
    –ü–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID.

    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
    """
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()

    # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
    select_query = "SELECT balance FROM users WHERE user_id = ?"

    cursor.execute(select_query, (user_id,))
    result = cursor.fetchone()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å
    if result:
        balance = result[0]
        print(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {balance}")
    else:
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        balance = None

    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    conn.close()

    return balance

@bot.callback_query_handler(func=lambda call: True)
def main_handle_query(callback):
    if callback.data == "information_button_back_pay":
        bot.delete_message(callback.message.chat.id, callback.message.message_id-1)
        command_start(callback.message)
    elif callback.data == "callback_main_button1":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        user_id = callback.from_user.id
        username = callback.from_user.username
        balance = get_user_balance(user_id)
        conn = sqlite3.connect(db_file)
        cursor = conn.cursor()

        # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
        select_query = "SELECT register_data FROM users WHERE user_id = ?"

        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π ID –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        cursor.execute(select_query, (user_id,))

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        result = cursor.fetchone()
        if result:
            register_time = result[0]
            print(f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {register_time}")
        else:
            register_time = None
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        markup = types.InlineKeyboardMarkup()

        pay_balance_button = types.InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data='pay_balance')
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')

        markup.row(pay_balance_button, information_button_back)
        profile_text = f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å: \n\nusername -> @{username} \nid -> {user_id} \n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {register_time[:8]} \n–±–∞–ª–∞–Ω—Å -> {balance}"

        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption=profile_text, reply_markup=markup)

    elif callback.data == "callback_main_button3":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
        markup.row(information_button_back)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption=help_text, parse_mode='html', reply_markup=markup)

    elif callback.data == "subscribe_button":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
        subscribe_button = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='button_subscribe')
        markup.row(information_button_back, subscribe_button)
        subscribe_text = '''<strong>–ü–æ–¥–ø–∏—Å–∫–∞\n\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–Ω–æ—Å–µ—Ä–∞:\n1.–°–Ω–æ—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤.\n2.–°–Ω–æ—Å —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–æ–≤.\n–ë—ã—Å—Ç—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º.\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n–¶–µ–Ω—ã:\n\n–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –¥–µ–Ω—å - 2$\n–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é - 5$\n–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü - 10$\n–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞ - 30\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ</strong>
        '''
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption=subscribe_text, parse_mode='html', reply_markup=markup)


    elif callback.data == "information_button_back":
        id = callback.from_user.id
        markup = types.InlineKeyboardMarkup()
        conn = sqlite3.connect(db_file)
        cur = conn.cursor()

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
        select_query = "SELECT subscribe_bool FROM users WHERE user_id = ?"
        cur.execute(select_query, (id,))
        result = cur.fetchone()

        conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.close()
        if result:
            current_subscribe_bool = result[0]
        else:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        if current_subscribe_bool == 1:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            button_snos = types.InlineKeyboardButton('–°–Ω–æ—Å', callback_data="snos_button")
            main_button3 = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ', callback_data="callback_main_button3")
            main_button1 = types.InlineKeyboardButton('–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data="callback_main_button1")
            markup.row(button_snos)
            markup.row(main_button1, main_button3)

        elif current_subscribe_bool == 0:
            command_start(callback.message)
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption="üíª –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

    elif callback.data == "button_subscribe":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        button_snos_account = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –¥–µ–Ω—å", callback_data='snos_day')
        button_snos_channel = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é", callback_data='snos_week')
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
        markup.row(button_snos_channel, button_snos_account)
        markup.row(information_button_back)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), parse_mode='html', reply_markup=markup)

    elif callback.data == "pay_balance":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        global amount
        start_payment_process(callback.message.chat.id, callback.message)

    elif callback.data == "snos_week":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        user_id = callback.from_user.id
        balance = get_user_balance(user_id)
        if balance < 5:
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                           parse_mode='html', reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup()
            button_confirm = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_button_week")
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(button_confirm)
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä",
                           parse_mode='html', reply_markup=markup)

    elif callback.data == "snos_day":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        user_id = callback.from_user.id
        balance = get_user_balance(user_id)
        if balance < 2:
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤",
                           parse_mode='html', reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup()
            button_confirm = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_button_day")
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(button_confirm)
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–±–æ—Ä",
                           parse_mode='html', reply_markup=markup)

    elif callback.data == "confirm_button_day":
        user_id = callback.from_user.id
        conn = sqlite3.connect(db_file)
        cur = conn.cursor()

        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
        select_query = "SELECT subscribe_bool_day FROM users WHERE user_id = ?"

        cur.execute(select_query, (user_id,))
        result = cur.fetchone()

        if result:
            current_subscribe_bool_day = result[0]
        else:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

        if current_subscribe_bool_day == 1:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É",
                           parse_mode='html', reply_markup=markup)
        else:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            user_id = callback.from_user.id
            print(user_id)
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption=confirm_text_day,
                           parse_mode='html', reply_markup=markup)
            minus_user_balance(user_id, 2)

            conn = sqlite3.connect(db_file)
            cur = conn.cursor()

            # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
            select_query = "SELECT subscribe_bool_day FROM users WHERE user_id = ?"

            cur.execute(select_query, (user_id,))
            result = cur.fetchone()

            if result:
                current_subscribe_bool_day = result[0]
                print(f"–¢–µ–∫—É—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_subscribe_bool_day}")

                # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
                new_subscribe_bool_day = (current_subscribe_bool_day or 0) + 1

                update_query = "UPDATE users SET subscribe_bool_day = ? WHERE user_id = ?"
                cur.execute(update_query, (new_subscribe_bool_day, user_id))
                print(f"–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_subscribe_bool_day}.")
            else:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn.close()

            conn = sqlite3.connect(db_file)
            cur = conn.cursor()

            # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
            select_query = "SELECT subscribe_bool FROM users WHERE user_id = ?"

            cur.execute(select_query, (user_id,))
            result = cur.fetchone()

        if result:
            current_subscribe_bool = result[0]
            print(f"–¢–µ–∫—É—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_subscribe_bool}")

            # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
            new_subscribe_bool = (current_subscribe_bool or 0) + 1

            update_query = "UPDATE users SET subscribe_bool = ? WHERE user_id = ?"
            cur.execute(update_query, (new_subscribe_bool, user_id))
            print(f"–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_subscribe_bool}.")
        else:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.close()

    elif callback.data == "confirm_button_week":
        user_id = callback.from_user.id
        conn = sqlite3.connect(db_file)
        cur = conn.cursor()

        # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
        select_query = "SELECT subscribe_bool_week FROM users WHERE user_id = ?"

        cur.execute(select_query, (user_id,))
        result = cur.fetchone()

        if result:
            current_subscribe_bool_week = result[0]
        else:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

        if current_subscribe_bool_week == 1:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption="–í—ã —É–∂–µ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É",
                           parse_mode='html', reply_markup=markup)
        else:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            user_id = callback.from_user.id
            print(user_id)
            markup = types.InlineKeyboardMarkup()
            information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
            markup.row(information_button_back)
            bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'),
                           caption=confirm_text_week,
                           parse_mode='html', reply_markup=markup)
            minus_user_balance(user_id, 5)

            conn = sqlite3.connect(db_file)
            cur = conn.cursor()

            # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
            select_query = "SELECT subscribe_bool_week FROM users WHERE user_id = ?"

            cur.execute(select_query, (user_id,))
            result = cur.fetchone()

            if result:
                current_subscribe_bool_week = result[0]
                print(f"–¢–µ–∫—É—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_subscribe_bool_week}")

                # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
                new_subscribe_bool_week = (current_subscribe_bool_week or 0) + 1

                update_query = "UPDATE users SET subscribe_bool_week = ? WHERE user_id = ?"
                cur.execute(update_query, (new_subscribe_bool_week, user_id))
                print(f"–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_subscribe_bool_week}.")
            else:
                print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn.close()

            conn = sqlite3.connect(db_file)
            cur = conn.cursor()

            # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è balance
            select_query = "SELECT subscribe_bool FROM users WHERE user_id = ?"

            cur.execute(select_query, (user_id,))
            result = cur.fetchone()

        if result:
            current_subscribe_bool = result[0]
            print(f"–¢–µ–∫—É—â–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}: {current_subscribe_bool}")

            # –°—É–º–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å —Å —Ç–µ–∫—É—â–∏–º
            new_subscribe_bool = (current_subscribe_bool or 0) + 1

            update_query = "UPDATE users SET subscribe_bool = ? WHERE user_id = ?"
            cur.execute(update_query, (new_subscribe_bool, user_id))
            print(f"–∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {new_subscribe_bool}.")
        else:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        conn.commit()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn.close()

    elif callback.data == "snos_button":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        snos_account_button = types.InlineKeyboardButton("–°–Ω–æ—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="snos_account_data")
        snos_channel_button = types.InlineKeyboardButton("–°–Ω–æ—Å –∫–∞–Ω–∞–ª–æ–≤", callback_data="snos_channel_data")
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')
        markup.row(snos_channel_button, snos_account_button)
        markup.row(information_button_back)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —Å–Ω–æ—Å–∞", parse_mode='html', reply_markup=markup)
    elif callback.data == "snos_channel_data":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        channel_button_dox = types.InlineKeyboardButton("–° –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏", callback_data="channel_dox")
        channel_button_flaying = types.InlineKeyboardButton("–ñ–∏–≤–æ–¥–µ—Ä—Å—Ç–≤–æ", callback_data="channel_flaying")
        channel_button_CPU = types.InlineKeyboardButton("–¶–ü", callback_data="channel_CPU")
        channel_button_price = types.InlineKeyboardButton("–ü—Ä–∞–π—Å—ã, –±–∏–æ –∏ —Ç.–¥", callback_data="channel_price")
        channel_button_dismemberment = types.InlineKeyboardButton("–†–∞—Å—á–ª–µ–Ω–µ–Ω–∫–∞", callback_data="channel_dismemberment")
        channel_button_casino = types.InlineKeyboardButton("–ö–∞–∑–∏–Ω–æ", callback_data="channel_casino")
        channel_button_narko = types.InlineKeyboardButton("–ù–∞—Ä–∫–æ-—à–æ–ø", callback_data="channel_narko")
        channel_button_terror = types.InlineKeyboardButton("–ü—Ä–∏–∑—ã–≤ –∫ —Ç–µ—Ä—Ä–æ—Ä—É", callback_data="channel_terror")
        channel_button_suicide = types.InlineKeyboardButton("–ü—Ä–∏–∑—ã–≤ –∫ —Å—É–∏—Ü–∏–¥—É", callback_data="channel_suicide")
        channel_button_hatred = types.InlineKeyboardButton("–†–∞–∑–∂–∏–≥–∞–Ω–∏–µ –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏", callback_data="channel_hatred")
        channel_button_violence = types.InlineKeyboardButton("–ü—Ä–æ–ø–æ–≥–∞–Ω–¥–∞ –Ω–∞—Å–∏–ª–∏—è", callback_data="channel_violence")
        channel_button_sell_CPU = types.InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞ –¶–ü", callback_data="channel_sell_CPU")
        channel_button_oppression_nation = types.InlineKeyboardButton("–£–≥–Ω–µ—Ç–µ–Ω–∏–µ –Ω–∞—Ü–∏–∏", callback_data="channel_oppression_nation")
        channel_button_oppression_religion = types.InlineKeyboardButton("–£–≥–Ω–µ—Ç–µ–Ω–∏–µ —Ä–µ–ª–∏–≥–∏–∏", callback_data="channel_oppression_religion")
        channel_button_pornography = types.InlineKeyboardButton("–° –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="channel_pornography")
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')

        markup.row(channel_button_dox, channel_button_flaying)
        markup.row(channel_button_CPU, channel_button_price)
        markup.row(channel_button_dismemberment, channel_button_casino)
        markup.row(channel_button_narko, channel_button_terror)
        markup.row(channel_button_suicide, channel_button_hatred)
        markup.row(channel_button_violence, channel_button_sell_CPU)
        markup.row(channel_button_oppression_nation, channel_button_oppression_religion)
        markup.row(channel_button_pornography)
        markup.row(information_button_back)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω–æ—Å–∞",
                       parse_mode='html', reply_markup=markup)
    elif callback.data == "snos_account_data":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        markup = types.InlineKeyboardMarkup()
        account_button_spam = types.InlineKeyboardButton("–°–ø–∞–º", callback_data="spam")
        account_button_dox = types.InlineKeyboardButton("–î–æ–∫—Å–∏–Ω–≥", callback_data="dox")
        account_button_troll = types.InlineKeyboardButton("–¢—Ä–æ–ª–ª–∏–Ω–≥", callback_data="troll")
        account_button_nark = types.InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞/—Ä–µ–∫–ª–∞–º–∞ –Ω–∞—Ä–∫–æ—Ç–∏–∫–æ–≤", callback_data="nark")
        account_button_curator = types.InlineKeyboardButton("–ö—É—Ä–∞—Ç–æ—Ä –≤ –Ω–∞—Ä–∫–æ—à–æ–ø–µ", callback_data="curator")
        account_button_CPU = types.InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞ —Ü–ø", callback_data="CPU")
        account_button_extortion = types.InlineKeyboardButton("–°–µ–∫—Å—É–∞–ª—å–Ω–æ–µ –≤—ã–º–æ–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ", callback_data="extortion")
        account_button_oppression_nation = types.InlineKeyboardButton("–£–≥–Ω–µ—Ç–µ–Ω–∏–µ –Ω–∞—Ü–∏–∏", callback_data="oppression_nation")
        account_button_oppression_religion = types.InlineKeyboardButton("–£–≥–Ω–µ—Ç–µ–Ω–∏–µ —Ä–µ–ª–∏–≥–∏–∏", callback_data="oppression_religion")
        account_button_dismemberment = types.InlineKeyboardButton("–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–ª–µ–Ω–µ–Ω–∫–∏", callback_data="dismemberment")
        account_button_flaying = types.InlineKeyboardButton("–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∂–∏–≤–æ–¥–µ—Ä—Å—Ç–≤–∞", callback_data="flaying")
        account_button_pornography = types.InlineKeyboardButton("–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="pornography")
        account_button_pimp = types.InlineKeyboardButton("–ü—Ä–æ–¥–∞–∂–∞ –ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–æ–∫", callback_data="pimp")
        account_button_suicide = types.InlineKeyboardButton("–ü—Ä–∏–∑—ã–≤ –∫ —Å—É–∏—Ü–∏–¥—É", callback_data="suicide")
        account_button_terrorist = types.InlineKeyboardButton("–ü—Ä–∏–∑—ã–≤ –∫ —Ç–µ—Ä—Ä–æ—Ä—É", callback_data="terrorist")
        account_button_swat = types.InlineKeyboardButton("–£–≥—Ä–æ–∑—ã —Å–≤–∞—Ç–æ–º", callback_data="swat")
        account_button_kill = types.InlineKeyboardButton("–£–≥—Ä–æ–∑—ã —É–±–∏–π—Å—Ç–≤–æ–º", callback_data="kill")
        account_button_session = types.InlineKeyboardButton("–°–Ω–æ—Å —Å–µ—Å—Å–∏–∏", callback_data="session")
        account_button_virtual = types.InlineKeyboardButton("–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä", callback_data="virtual")
        information_button_back = types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='information_button_back')

        markup.row(account_button_spam, account_button_dox)
        markup.row(account_button_troll, account_button_nark)
        markup.row(account_button_curator, account_button_CPU)
        markup.row(account_button_extortion, account_button_oppression_nation)
        markup.row(account_button_oppression_religion, account_button_dismemberment)
        markup.row(account_button_flaying, account_button_pornography)
        markup.row(account_button_pimp, account_button_suicide)
        markup.row(account_button_terrorist, account_button_swat)
        markup.row(account_button_kill, account_button_session)
        markup.row(account_button_virtual)
        markup.row(information_button_back)
        bot.send_photo(callback.message.chat.id, photo=open('photo.jpg', 'rb'), caption="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Å–Ω–æ—Å–∞", parse_mode='html', reply_markup=markup)
    elif callback.data == "channel_dox" or "channel_flaying" or "channel_CPU" or "channel_price" or "channel_dismemberment" or "channel_casino" or "channel_narko" or "channel_terror" or "channel_suicide" or "channel_hatred" or "channel_violence" or "channel_sell_CPU" or "channel_oppression_nation" or "channel_oppression_religion" or "channel_pornography":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        data = callback.data
        get_channel_link(callback.message, data)

    elif callback.data == "spam" or "dox" or "troll" or "nark" or "curator" or "CPU" or "extortion" or "oppression_nation" or "oppression_religion" or "dismemberment" or "flaying" or "pornography" or "pimp" or "suicide" or "terrorist" or "swat" or "kill":
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        data = callback.data
    elif callback.data == "session" or "virtual":
        data = callback.data
        send_welcome_18(callback.message, data)

    else:
        bot.answer_callback_query(callback.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä")
    id = callback.from_user.id




crypto_pay.run_polling(bot.infinity_polling)
bot.polling()